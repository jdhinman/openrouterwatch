workflows:
  android-workflow:
    name: OpenRouter Watch
    instance_type: linux_x2
    max_build_duration: 60
    environment:
      vars:
        # Add any app-specific environment variables here
        PACKAGE_NAME: "com.example.openrouterwatch"
      java: 11
    cache:
      cache_paths:
        - ~/.gradle/caches
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
    scripts:
      - name: Set up repository structure
        script: |
          echo "Checking repository structure..."
          find . -type f -name "*.gradle" | sort
          
          if [ -f "app/build.gradle" ]; then
            echo "Contents of app/build.gradle:"
            cat app/build.gradle
          fi
          
          if [ -f "build.gradle" ]; then
            echo "Contents of root build.gradle:"
            cat build.gradle
          fi
          
          echo "Checking for Android manifest:"
          find . -name "AndroidManifest.xml"
      
      - name: Install specific Gradle version
        script: |
          echo "Installing Gradle 6.7.1 (more compatible with older Android projects)..."
          wget https://services.gradle.org/distributions/gradle-6.7.1-bin.zip
          unzip -q gradle-6.7.1-bin.zip
          export GRADLE_HOME=$PWD/gradle-6.7.1
          export PATH=$GRADLE_HOME/bin:$PATH
          echo "Using Gradle version:"
          gradle --version
      
      - name: Update build.gradle files
        script: |
          echo "Checking Android plugin version compatibility..."
          
          # Update root build.gradle if needed
          if [ -f "build.gradle" ]; then
            # Remove specific Gradle plugin version to let it use what's compatible
            sed -i 's/com.android.tools.build:gradle:[0-9.]\+/com.android.tools.build:gradle:4.1.3/' build.gradle
            echo "Updated root build.gradle:"
            cat build.gradle
          fi
          
          # Create a local.properties file
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "Created local.properties:"
          cat local.properties
      
      - name: Attempt build with verbose output
        script: |
          echo "Running build with --stacktrace --info..."
          gradle assembleDebug --stacktrace --info || true
          
          echo "Attempting more specific build..."
          gradle :app:assembleDebug --stacktrace --info || true
          
          # Direct approach with app folder
          if [ -d "app" ]; then
            cd app
            echo "Trying build from app directory..."
            ../gradle-6.7.1/bin/gradle assembleDebug --stacktrace --info || true
            cd ..
          fi
      
      - name: Find APK
        script: |
          echo "Searching for APK files..."
          find . -name "*.apk"
      
      - name: Debug project structure
        script: |
          echo "Project structure analysis:"
          ls -la
          find . -type d -maxdepth 2
          
          echo "Gradle build files:"
          find . -name "build.gradle" | xargs cat
          
          echo "Settings.gradle:"
          find . -name "settings.gradle" | xargs cat
      
      - name: Build with specific arguments
        script: |
          # Try a basic build with arguments that might work around the issue
          gradle assembleDebug -Pandroid.useAndroidX=true --warning-mode=all
    artifacts:
      - app/build/outputs/apk/debug/*.apk
      - build/outputs/apk/**/*.apk
      - app/build/outputs/**/*.apk
      - "**/*.apk"
    publishing:
      email:
        recipients:
          - your.email@example.com  # Replace with your actual email
